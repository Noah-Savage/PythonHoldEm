#Create seed to ensure truly random numbers

import random

seed1 = random.randint(1, 100)

#Randomize random seed so numbers are different every time
random.seed(seed1)

chips = 50

again = "y"

while((again is "y") and chips > 0):
    
    #######################################
    ###### Generate values for cards ######
    #######################################
    
    unum1 = random.randint(2, 14)
    
    unum2 = random.randint(2, 14)
        
    hnum1 = random.randint(2, 14)
        
    hnum2 = random.randint(2, 14)
        
    flop1 = random.randint(2, 14)
        
    flop2 = random.randint(2, 14)
        
    flop3 = random.randint(2, 14)
        
    river = random.randint(2, 14)
        
    turn = random.randint(2, 14)
    
        
    #Create pools of cards that are in play for the player and AI
    upool = [unum1, unum2, flop1, flop2, flop3, river, turn]
    hpool = [hnum1, hnum2, flop1, flop2, flop3, river, turn]
    


    #Ensure there are at most 4 of any card
    while((upool.count(unum1) > 4) or (upool.count(unum2) > 4) or (upool.count(flop1) > 4) or (upool.count(flop2) > 4) or (upool.count(flop3) > 4) or (upool.count(river) > 4) or (upool.count(turn) > 4) or (hpool.count(hnum1) > 4) or (hpool.count(hnum2) > 4) or (hpool.count(flop1) > 4) or (hpool.count(flop2) > 4) or (hpool.count(flop3) > 4) or (hpool.count(river) > 4) or (hpool.count(turn) > 4)):
        unum1 = random.randint(2, 14)
    
        unum2 = random.randint(2, 14)
        
        hnum1 = random.randint(2, 14)
        
        hnum2 = random.randint(2, 14)
        
        flop1 = random.randint(2, 14)
        
        flop2 = random.randint(2, 14)
        
        flop3 = random.randint(2, 14)
        
        river = random.randint(2, 14)
        
        turn = random.randint(2, 14)
    
    #######################################
    
    
    #Create pools of cards that are in play for the player and AI
    upool = [unum1, unum2, flop1, flop2, flop3, river, turn]
    hpool = [hnum1, hnum2, flop1, flop2, flop3, river, turn]
    
    #Number of cards in each player's hand that are in their pool
    upair1 = upool.count(unum1)
    upair2 = upool.count(unum2)
    ucount = upair1 + upair2
    hpair1 = hpool.count(hnum1)
    hpair2 = hpool.count(hnum2)
    hcount = hpair1 + hpair2
    
    tableCards = [flop1, flop2, flop3, river, turn]
    
    if(tableCards.count(flop1) is 2 or tableCards.count(flop2) is 2 or tableCards.count(flop3) is 2 or tableCards.count(river) is 2 or tableCards.count(turn) is 2):
        ucount = ucount + 2
        hcount = hcount + 2
        
    if(tableCards.count(flop1) is 3 or tableCards.count(flop2) is 3 or tableCards.count(flop3) is 3 or tableCards.count(river) is 3 or tableCards.count(turn) is 3):
        ucount = ucount + 3
        hcount = hcount + 3
    
    winwin = False
    
    #Actual card names
    
    masterkey = {
    
        2: "2",
    
        3: "3",
    
        4: "4",
    
        5: "5",
    
        6: "6",
    
        7: "7",
    
        8: "8",
    
        9: "9",
    
        10: "10",
    
        11: "Jack",
    
        12: "Queen",
    
        13: "King",
    
        14: "Ace"
    
    }
    

    
    raiseBet = 0
    
    fold = ""
    
    again = ""
    
    winCond = ""
    
    #Convert from numbers to names
    
    uname1 = masterkey[unum1]
    
    uname2 = masterkey[unum2]
    
    hname1 = masterkey[hnum1]
    
    hname2 = masterkey[hnum2]
    
    fname1 = masterkey[flop1]
    
    fname2 = masterkey[flop2]
    
    fname3 = masterkey[flop3]
    
    rname = masterkey[river]
    
    tname = masterkey[turn]
    
    
    
    #Start the actual game
    
    print("Your hand: ", uname1, uname2)
    
    
    #initial bet
    while True:
                try:
                    bet = int(input("Enter an amount to bet: "))
                    bet = bet
                    while((chips - bet) < 0):
                        bet = int(input("You dont have that many chips! Input another bet: "))
                    chips = chips - bet
                    break
                except ValueError:
                    print("Not a valid bet!")
    
    fold = input("Would you like to fold? (y/n) ")
    while((fold is not "y") and (fold is not "n")):
        fold = input("Invalid answer! Would you like to fold? (y/n) ")
        
        
    ##### FIRST TURN #####
     
    if(fold == "y"):
    
        print("Too bad!")
    
        print("The flop: ", fname1, fname2, fname3)
    
        print("The river: ", fname1, fname2, fname3, rname)
    
        print("The turn: ", fname1, fname2, fname3, rname, tname)
    
        print("House hand: ", hname1, hname2)
        
        again = input("House wins! Would you like to play again? (y/n) ")
        
        
    elif(fold == "n"):
    
        print("The flop: ", fname1, fname2, fname3)
    
        fold = input("Would you like to fold? (y/n) ")
        while((fold is not "y") and (fold is not "n")):
            fold = input("Invalid answer! Would you like to fold? (y/n) ")
            
            
        ### AI to make the CPU fold if they have nothing and you have a good hand ###    
        if((hpair1 is 0 and hpair2 is 0) and ((upair1 > 2) or (upair2 > 2))):
            print("The PC decided it wasn't his day! You win!")
            chips = chips + bet
            break
            
    
        if(fold == "y"):
    
            print("Too bad!")
    
            print("The river: ",  fname1, fname2, fname3, rname)
    
            print("The turn: ", fname1, fname2, fname3, rname, tname)
    
            print("House hand: ", hname1, hname2)
    
            again = input("House wins! Would you like to play again? (y/n) ")
    
        elif(fold == "n"):
            while True:
                try:
                    raiseBet = int(input("Enter an amount to raise your bet by: "))
                    newChips = chips - raiseBet
                    while((newChips < 0) and (raiseBet is not 0)):
                        raiseBet = int(input("You dont have that many chips! Input another bet: "))
                    raiseBet = raiseBet
                    chips = chips - raiseBet
                    bet = bet + raiseBet
                    break
                except ValueError:
                    print("Not a valid bet!")

    
            print("The river: ",  fname1, fname2, fname3, rname)
    
            fold = input("Would you like to fold? (y/n) ")
            while((fold is not "y") and (fold is not "n")):
                fold = input("Invalid answer! Would you like to fold? (y/n) ")
    
            
            ### AI to make the CPU fold if they have nothing and you have a good hand ###    
            if((hpair1 is 0 and hpair2 is 0) and ((upair1 > 2) or (upair2 > 2))):
                print("The PC decided it wasn't his day! You win!")
                chips = chips + bet
                break
            
    
            if(fold == "y"):
    
                print("Too bad!")
    
                print("The turn: ", fname1, fname2, fname3, rname, tname)
    
                print("House hand: ", hname1, hname2)
    
                again = input("House wins! Would you like to play again? (y/n) ")
    
            elif(fold == "n"):
    
                print("The turn: ", fname1, fname2, fname3, rname, tname)
    
                while True:
                    try:
                        raiseBet = int(input("Enter an amount to raise your bet by: "))
                        newChips = chips - raiseBet
                        while((newChips < 0) and (chips is not 0)):
                            raiseBet = int(input("You dont have that many chips! Input another bet: "))
                        raiseBet = raiseBet
                        bet = bet + raiseBet
                        chips = chips - raiseBet
                        break
                    except ValueError: 
                        print("Not a valid bet!")

    
                print("House hand: ", hname1, hname2)
                

    
                ###############################
                ###### WIN OR LOSE LOGIC ######
                ###############################
                
                if((upair1 is 4) or (upair2 is 4)):
                    winwin = True
                    winCond = "You got 4 of a kind!"
                elif((hpair1 is 4) or (hpair2 is 4)):
                    winwin = False
                    winCond = "The house got 4 of a kind!"
                elif((ucount is 5) and (hcount < 5)):
                    winwin = True
                    winCond = "You got a full house!"
                elif((hcount is 5) and (ucount < 5)):
                    winwin = True
                    winCond = "The house got a full house!"
                elif(ucount > hcount):
                    winwin = True
                    winCond = "You got more pairs!"
                elif(hcount > ucount):
                    winwin = False
                    winCond = "The house got more pairs!"
                elif(ucount is hcount):
                    if(((unum1 > hnum1) and (unum1 > hnum2)) or ((unum2 > hnum1) and (unum2 > hnum2))):
                        winwin = True
                        winCond = "You got the high card!"
                    elif(((unum1 < hnum1) and (unum2 < hnum1)) or ((unum1 < hnum2) and (unum2 < hnum2))):
                        winwin = False
                        winCond = "The house got the high card!"
                
                ###############################
                
                
                #Adjust chips accordingly
                if winwin:
                    chips = chips + (2*bet)
                
                
                print(winCond)
                print("You have", chips, "chips left.")
                again = input("Would you like to play again? (y/n) ")
                while((again is not "y") and (again is not "n")):
                    again = input("Not a valid answer! Would you like to play again? (y/n) ")
                    
            
                
if(chips is 0):
    print("You're out of chips! Thanks for playing!")
else:
   print("Thanks for playing!")
